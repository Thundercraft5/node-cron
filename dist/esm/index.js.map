{"version":3,"file":"index.js","sources":["../../node_modules/@thundercraft5/node-errors/dist/index.js","../../src/CronError.ts","../../src/validateInterval.ts","../../src/CronJob.ts","../../node_modules/node-cron/src/task.js","../../node_modules/node-cron/src/convert-expression/month-names-conversion.js","../../node_modules/node-cron/src/convert-expression/week-day-names-conversion.js","../../node_modules/node-cron/src/convert-expression/asterisk-to-range-conversion.js","../../node_modules/node-cron/src/convert-expression/range-conversion.js","../../node_modules/node-cron/src/convert-expression/step-values-conversion.js","../../node_modules/node-cron/src/convert-expression/index.js","../../node_modules/node-cron/src/pattern-validation.js","../../node_modules/node-cron/src/time-matcher.js","../../node_modules/node-cron/src/scheduler.js","../../../../../node_modules/uuid/lib/rng.js","../../../../../node_modules/uuid/lib/bytesToUuid.js","../../../../../node_modules/uuid/v1.js","../../../../../node_modules/uuid/v4.js","../../../../../node_modules/uuid/index.js","../../node_modules/node-cron/src/scheduled-task.js","../../node_modules/node-cron/src/background-scheduled-task/index.js","../../node_modules/node-cron/src/storage.js","../../node_modules/node-cron/src/node-cron.js","../../src/CronSet.ts","../../src/CronJobMap.ts","../../src/CronJobManager.ts"],"sourcesContent":["// src/utils/formatWordList.ts\nfunction formatWordList(list, and = false) {\n  const last = list.pop(), lastWord = and ? \"and\" : \"or\";\n  if (list.length > 1) {\n    const commaSeparated = list.map((s, i) => `${i % 5 == 0 && i ? \"\\n\" : \"\"}\"${s}\"`);\n    return `${commaSeparated.join(\", \")}, ${lastWord} \"${last}\"`;\n  } else\n    return `${list.length == 1 ? `\"${list[0]}\" ${lastWord} ` : \"\"}\"${last}\"`;\n}\n\n// src/utils/formatErrorMessage.ts\nfunction formatErrorMessage(messages2, code, ...formats) {\n  if (!(code in messages2))\n    throw new ReferenceError(\"INVALID_MESSAGE_CODE\", code, formatWordList(Object.keys(messages2)));\n  const message = typeof messages2[code] === \"function\" ? messages2[code](...formats) : messages2[code];\n  if (typeof messages2[code] === \"function\" && messages2[code].length > formats.length)\n    throw new RangeError(\"MESSAGE_CODE_MISSING_FORMATS\", code, messages2[code].length, formats.length);\n  return message;\n}\n\n// src/makeCodedError.ts\nfunction makeCodedError(messages2, Base) {\n  if (\"$$<Symbol>codedError\" in Base)\n    throw new TypeError(\"ERROR_CLASS_ALREADY_EXTENDED\", Base);\n  return class extends Base {\n    static get [\"$$<Symbol>codedErrorClass\"]() {\n      return true;\n    }\n    static [Symbol.hasInstance](instance) {\n      let constructor = instance[Symbol.species] || instance.constructor;\n      return instance instanceof Base || constructor === this;\n    }\n    static {\n      Object.defineProperty(this, \"name\", { value: Base.name });\n    }\n    #message = \"\";\n    [\"$$<Symbol>codedError\"];\n    [\"$$<Symbol>code\"];\n    [\"$$<Symbol>rawMessage\"];\n    constructor(code, ...formats) {\n      super(formatErrorMessage(messages2, code, ...formats));\n      if (typeof messages2[code] !== \"string\")\n        this[\"$$<Symbol>rawMessage\"] = messages2[code]?.toString() ?? null;\n      this[\"$$<Symbol>code\"] = code.toLocaleUpperCase();\n      Object.defineProperty(this, \"$$<Symbol>codedError\", { value: true });\n    }\n    get name() {\n      return `${this.getErrorName()}${this[\"$$<Symbol>code\"] ? ` [${this[\"$$<Symbol>code\"]}]` : \"\"}`;\n    }\n    get message() {\n      return !this.#message ? \"\" : this.#message;\n    }\n    set message(value) {\n      this.#message = value;\n    }\n    get [Symbol.species]() {\n      return Base;\n    }\n    get [Symbol.toStringTag]() {\n      return this.getErrorName();\n    }\n    getErrorName() {\n      const names = [];\n      let cur = this.constructor;\n      while (cur) {\n        names.push(cur.name);\n        cur = Object.getPrototypeOf(cur);\n      }\n      return names.find((name) => name != \"CodedError\");\n    }\n  };\n}\n\n// src/nativeMessages.ts\nvar messages = {\n  ERROR_CLASS_ALREADY_EXTENDED: (Class) => `Error class \"${Class.name}\" is already a coded error class.`,\n  INVALID_MESSAGE_CODE: (code = \"\", validCodes = \"\") => `Error code \"${code}\" was not found in the provided messages registry.\nList of valid codes: ${validCodes}`,\n  MESSAGE_CODE_MISSING_FORMATS: (code = \"\", required = 0, received = 0) => `Message code \"${code}\" expects at least ${required} format arguments, got ${received} instead`,\n  METHOD_NOT_IMPLEMENTED: (Class, name = \"\") => `Method ${Class.name}#${name}() is not implemented.`\n};\nvar nativeMessages_default = messages;\n\n// src/makeErrors.ts\nfunction makeErrors(messages2, errors, includeNativeCodes = true) {\n  if (includeNativeCodes)\n    messages2 = { ...messages2, ...nativeMessages_default };\n  const ret = {};\n  const entries = Object.entries(errors);\n  for (const [k, error] of entries) {\n    ret[k] = makeCodedError(messages2, error);\n  }\n  return ret;\n}\n\n// src/nativeErrors.ts\nvar {\n  TypeError,\n  RangeError,\n  ReferenceError,\n  Error\n} = makeErrors(nativeMessages_default, {\n  TypeError: globalThis.TypeError,\n  RangeError: globalThis.RangeError,\n  ReferenceError: globalThis.ReferenceError,\n  Error: globalThis.Error\n});\n\n// src/symbols.ts\nvar SymbolCodedErrorClass = Symbol(\"codedErrorClass\");\nvar SymbolCodedError = Symbol(\"codedError\");\nvar SymbolCode = Symbol(\"code\");\nvar SymbolRawMessage = Symbol(\"rawMessage\");\n\n// src/utils/isCodedErrorClass.ts\nfunction isCodedErrorClass(ErrorClass) {\n  return \"$$<Symbol>codedErrorClass\" in ErrorClass;\n}\n\n// src/utils/isCodedError.ts\nfunction isCodedError(errorObject) {\n  return \"$$<Symbol>code\" in errorObject;\n}\nexport {\n  Error,\n  RangeError,\n  ReferenceError,\n  SymbolCode,\n  SymbolCodedError,\n  SymbolCodedErrorClass,\n  SymbolRawMessage,\n  TypeError,\n  makeErrors as default,\n  isCodedError,\n  isCodedErrorClass,\n  makeCodedError,\n  makeErrors,\n  nativeMessages_default as messages\n};\n//# sourceMappingURL=index.js.map\n","import makeErrors from \"@thundercraft5/node-errors\";\n\nconst { Error: CronError } = makeErrors({\n\tINVALID_CRON_JOB_INTERVAL: (interval = \"\") => `An invalid cron job interval was provided (\"${ interval }\").`,\n\tINVALID_CRON_JOB_CLASS: (Class: Function) => `An invalid cron job class was provided (${ Class.name }). All cron job classes must extend \\`CronJob\\`.`,\n\tINVALID_CRON_SET_INTERVAL: (setInterval = \"\", interval = \"\") => `An invalid cron set interval was provided (\"${interval}\"). All jobs added to this set must be of interval \"${setInterval}\".`,\n\tINTERVAL_ALREADY_RUNNING: (interval = \"\") => `Cron job with interval \"${interval}\" is already running.`,\n\tINTERVAL_ALREADY_STOPPED: (interval = \"\") => `Cron job with interval \"${interval}\" is already stopped.`,\n}, {\n\tError: class CronError extends Error {},\n});\t\n\nexport default CronError;","import CronError from \"./CronError\";\n\nexport const cronJobRegex = /^((((\\d+,)+\\d+|(\\d+(\\/|-|#)\\d+)|\\d+L?|\\*(\\/\\d+)?|L(-\\d+)?|\\?|[A-Z]{3}(-[A-Z]{3})?) ?){5,7})$|(@(annually|yearly|monthly|weekly|daily|hourly|reboot))|(@every (\\d+(ns|us|Âµs|ms|s|m|h))+)/u;\n\nexport default function validateInterval<T>(interval: T) {\n\tif (typeof interval !== \"string\" || !cronJobRegex.test(interval))\n\t\tthrow new CronError(\"INVALID_CRON_JOB_INTERVAL\", interval);\n\n\treturn interval;\n}","import { TypeError } from \"@thundercraft5/node-errors\";\n\nimport CronError from \"./CronError\";\nimport type { ScheduledTask } from \"node-cron\";\n\nimport type { CronFunc, default as CronJobManager } from \"./CronJobManager\";\n\nimport { cronJobRegex } from \"./validateInterval\";\n\nexport default class CronJob<I extends string = string> {\n\tcronTask: ScheduledTask;\n\tinterval: I;\n\tcaller: (date: Date) => void;\n\tmanager: CronJobManager;\n\n\tconstructor(interval?: I, func?: CronFunc) {\n\t\tif (!interval || !cronJobRegex.test(interval)) throw new CronError(\"INVALID_CRON_JOB_INTERVAL\", interval);\n\n\t\tif (func) this.run = func;\n\t\tthis.interval = interval;\n\t\tthis.caller = (date: Date) => {\n\t\t\ttry {\n\t\t\t\tthis.run.call(this.manager, date);\n\t\t\t} catch (e: any) {\n\t\t\t\tconsole.warn(`Cron job with interval \"${ interval }\" failed with exception: ${ e.stack || e }`);\n\t\t\t}\n\t\t};\n\t}\n\n\tinit(manager: CronJobManager) {\n\t\tthis.manager = manager;\n\n\t\treturn this;\n\t}\n\n\trun(date: Date) {\n\t\tthrow new TypeError(\"METHOD_NOT_IMPLEMENTED\", this.constructor, \"run\");\n\t}\n\n\tstop(date: Date) {\n\t\tthis.cronTask.stop();\n\t}\n\n\trestart(date: Date) {\n\t\tthis.cronTask.start();\n\t}\n}","'use strict';\n\nconst EventEmitter = require('events');\n\nclass Task extends EventEmitter{\n    constructor(execution){\n        super();\n        if(typeof execution !== 'function') {\n            throw 'execution must be a function';\n        }\n        this._execution = execution;\n    }\n\n    execute(now) {\n        let exec;\n        try {\n            exec = this._execution(now);\n        } catch (error) {\n            return this.emit('task-failed', error);\n        }\n        \n        if (exec instanceof Promise) {\n            return exec\n                .then(() => this.emit('task-finished'))\n                .catch((error) => this.emit('task-failed', error));\n        } else {\n            this.emit('task-finished');\n            return exec;\n        }\n    }\n}\n\nmodule.exports = Task;\n\n","'use strict';\nmodule.exports = (() => {\n    const months = ['january','february','march','april','may','june','july',\n        'august','september','october','november','december'];\n    const shortMonths = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug',\n        'sep', 'oct', 'nov', 'dec'];\n\n    function convertMonthName(expression, items){\n        for(let i = 0; i < items.length; i++){\n            expression = expression.replace(new RegExp(items[i], 'gi'), parseInt(i, 10) + 1);\n        }\n        return expression;\n    }\n\n    function interprete(monthExpression){\n        monthExpression = convertMonthName(monthExpression, months);\n        monthExpression = convertMonthName(monthExpression, shortMonths);\n        return monthExpression;\n    }\n\n    return interprete;\n})();\n","'use strict';\nmodule.exports = (() => {\n    const weekDays = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday',\n        'friday', 'saturday'];\n    const shortWeekDays = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\n    function convertWeekDayName(expression, items){\n        for(let i = 0; i < items.length; i++){\n            expression = expression.replace(new RegExp(items[i], 'gi'), parseInt(i, 10));\n        }\n        return expression;\n    }\n  \n    function convertWeekDays(expression){\n        expression = expression.replace('7', '0');\n        expression = convertWeekDayName(expression, weekDays);\n        return convertWeekDayName(expression, shortWeekDays);\n    }\n\n    return convertWeekDays;\n})();\n","'use strict';\nmodule.exports = (() => {\n    function convertAsterisk(expression, replecement){\n        if(expression.indexOf('*') !== -1){\n            return expression.replace('*', replecement);\n        }\n        return expression;\n    }\n\n    function convertAsterisksToRanges(expressions){\n        expressions[0] = convertAsterisk(expressions[0], '0-59');\n        expressions[1] = convertAsterisk(expressions[1], '0-59');\n        expressions[2] = convertAsterisk(expressions[2], '0-23');\n        expressions[3] = convertAsterisk(expressions[3], '1-31');\n        expressions[4] = convertAsterisk(expressions[4], '1-12');\n        expressions[5] = convertAsterisk(expressions[5], '0-6');\n        return expressions;\n    }\n\n    return convertAsterisksToRanges;\n})();\n","'use strict';\nmodule.exports = ( () => {\n    function replaceWithRange(expression, text, init, end) {\n\n        const numbers = [];\n        let last = parseInt(end);\n        let first = parseInt(init);\n\n        if(first > last){\n            last = parseInt(init);\n            first = parseInt(end);\n        }\n\n        for(let i = first; i <= last; i++) {\n            numbers.push(i);\n        }\n\n        return expression.replace(new RegExp(text, 'i'), numbers.join());\n    }\n\n    function convertRange(expression){\n        const rangeRegEx = /(\\d+)-(\\d+)/;\n        let match = rangeRegEx.exec(expression);\n        while(match !== null && match.length > 0){\n            expression = replaceWithRange(expression, match[0], match[1], match[2]);\n            match = rangeRegEx.exec(expression);\n        }\n        return expression;\n    }\n\n    function convertAllRanges(expressions){\n        for(let i = 0; i < expressions.length; i++){\n            expressions[i] = convertRange(expressions[i]);\n        }\n        return expressions;\n    }\n\n    return convertAllRanges;\n})();\n","'use strict';\n\nmodule.exports = (() => {\n    function convertSteps(expressions){\n        var stepValuePattern = /^(.+)\\/(\\w+)$/;\n        for(var i = 0; i < expressions.length; i++){\n            var match = stepValuePattern.exec(expressions[i]);\n            var isStepValue = match !== null && match.length > 0;\n            if(isStepValue){\n                var baseDivider = match[2];\n                if(isNaN(baseDivider)){\n                    throw baseDivider + ' is not a valid step value';\n                }\n                var values = match[1].split(',');\n                var stepValues = [];\n                var divider = parseInt(baseDivider, 10);\n                for(var j = 0; j <= values.length; j++){\n                    var value = parseInt(values[j], 10);\n                    if(value % divider === 0){\n                        stepValues.push(value);\n                    }\n                }\n                expressions[i] = stepValues.join(',');\n            }\n        }\n        return expressions;\n    }\n\n    return convertSteps;\n})();\n","'use strict';\n\nconst monthNamesConversion = require('./month-names-conversion');\nconst weekDayNamesConversion = require('./week-day-names-conversion');\nconst convertAsterisksToRanges = require('./asterisk-to-range-conversion');\nconst convertRanges = require('./range-conversion');\nconst convertSteps = require('./step-values-conversion');\n\nmodule.exports = (() => {\n\n    function appendSeccondExpression(expressions){\n        if(expressions.length === 5){\n            return ['0'].concat(expressions);\n        }\n        return expressions;\n    }\n\n    function removeSpaces(str) {\n        return str.replace(/\\s{2,}/g, ' ').trim();\n    }\n\n    // Function that takes care of normalization.\n    function normalizeIntegers(expressions) {\n        for (let i=0; i < expressions.length; i++){\n            const numbers = expressions[i].split(',');\n            for (let j=0; j<numbers.length; j++){\n                numbers[j] = parseInt(numbers[j]);\n            }\n            expressions[i] = numbers;\n        }\n        return expressions;\n    }\n\n    /*\n   * The node-cron core allows only numbers (including multiple numbers e.g 1,2).\n   * This module is going to translate the month names, week day names and ranges\n   * to integers relatives.\n   *\n   * Month names example:\n   *  - expression 0 1 1 January,Sep *\n   *  - Will be translated to 0 1 1 1,9 *\n   *\n   * Week day names example:\n   *  - expression 0 1 1 2 Monday,Sat\n   *  - Will be translated to 0 1 1 1,5 *\n   *\n   * Ranges example:\n   *  - expression 1-5 * * * *\n   *  - Will be translated to 1,2,3,4,5 * * * *\n   */\n    function interprete(expression){\n        let expressions = removeSpaces(expression).split(' ');\n        expressions = appendSeccondExpression(expressions);\n        expressions[4] = monthNamesConversion(expressions[4]);\n        expressions[5] = weekDayNamesConversion(expressions[5]);\n        expressions = convertAsterisksToRanges(expressions);\n        expressions = convertRanges(expressions);\n        expressions = convertSteps(expressions);\n\n        expressions = normalizeIntegers(expressions);\n\n        return expressions.join(' ');\n    }\n\n    return interprete;\n})();\n","'use strict';\n\nconst convertExpression = require('./convert-expression');\n\nconst validationRegex = /^(?:\\d+|\\*|\\*\\/\\d+)$/;\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @param {number} min The minimum value.\n * @param {number} max The maximum value.\n * @returns {boolean}\n */\nfunction isValidExpression(expression, min, max) {\n    const options = expression.split(',');\n\n    for (const option of options) {\n        const optionAsInt = parseInt(option, 10);\n\n        if (\n            (!Number.isNaN(optionAsInt) &&\n                (optionAsInt < min || optionAsInt > max)) ||\n            !validationRegex.test(option)\n        )\n            return false;\n    }\n\n    return true;\n}\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @returns {boolean}\n */\nfunction isInvalidSecond(expression) {\n    return !isValidExpression(expression, 0, 59);\n}\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @returns {boolean}\n */\nfunction isInvalidMinute(expression) {\n    return !isValidExpression(expression, 0, 59);\n}\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @returns {boolean}\n */\nfunction isInvalidHour(expression) {\n    return !isValidExpression(expression, 0, 23);\n}\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @returns {boolean}\n */\nfunction isInvalidDayOfMonth(expression) {\n    return !isValidExpression(expression, 1, 31);\n}\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @returns {boolean}\n */\nfunction isInvalidMonth(expression) {\n    return !isValidExpression(expression, 1, 12);\n}\n\n/**\n * @param {string} expression The Cron-Job expression.\n * @returns {boolean}\n */\nfunction isInvalidWeekDay(expression) {\n    return !isValidExpression(expression, 0, 7);\n}\n\n/**\n * @param {string[]} patterns The Cron-Job expression patterns.\n * @param {string[]} executablePatterns The executable Cron-Job expression\n * patterns.\n * @returns {void}\n */\nfunction validateFields(patterns, executablePatterns) {\n    if (isInvalidSecond(executablePatterns[0]))\n        throw new Error(`${patterns[0]} is a invalid expression for second`);\n\n    if (isInvalidMinute(executablePatterns[1]))\n        throw new Error(`${patterns[1]} is a invalid expression for minute`);\n\n    if (isInvalidHour(executablePatterns[2]))\n        throw new Error(`${patterns[2]} is a invalid expression for hour`);\n\n    if (isInvalidDayOfMonth(executablePatterns[3]))\n        throw new Error(\n            `${patterns[3]} is a invalid expression for day of month`\n        );\n\n    if (isInvalidMonth(executablePatterns[4]))\n        throw new Error(`${patterns[4]} is a invalid expression for month`);\n\n    if (isInvalidWeekDay(executablePatterns[5]))\n        throw new Error(`${patterns[5]} is a invalid expression for week day`);\n}\n\n/**\n * Validates a Cron-Job expression pattern.\n *\n * @param {string} pattern The Cron-Job expression pattern.\n * @returns {void}\n */\nfunction validate(pattern) {\n    if (typeof pattern !== 'string')\n        throw new TypeError('pattern must be a string!');\n\n    const patterns = pattern.split(' ');\n    const executablePatterns = convertExpression(pattern).split(' ');\n\n    if (patterns.length === 5) patterns.unshift('0');\n\n    validateFields(patterns, executablePatterns);\n}\n\nmodule.exports = validate;\n","const validatePattern = require('./pattern-validation');\nconst convertExpression = require('./convert-expression');\n\nfunction matchPattern(pattern, value){\n    if( pattern.indexOf(',') !== -1 ){\n        const patterns = pattern.split(',');\n        return patterns.indexOf(value.toString()) !== -1;\n    }\n    return pattern === value.toString();\n}\n\nclass TimeMatcher{\n    constructor(pattern, timezone){\n        validatePattern(pattern);\n        this.pattern = convertExpression(pattern);\n        this.timezone = timezone;\n        this.expressions = this.pattern.split(' ');\n    }\n\n    match(date){\n        date = this.apply(date);\n\n        const runOnSecond = matchPattern(this.expressions[0], date.getSeconds());\n        const runOnMinute = matchPattern(this.expressions[1], date.getMinutes());\n        const runOnHour = matchPattern(this.expressions[2], date.getHours());\n        const runOnDay = matchPattern(this.expressions[3], date.getDate());\n        const runOnMonth = matchPattern(this.expressions[4], date.getMonth() + 1);\n        const runOnWeekDay = matchPattern(this.expressions[5], date.getDay());\n\n        return runOnSecond && runOnMinute && runOnHour && runOnDay && runOnMonth && runOnWeekDay;\n    }\n\n    apply(date){\n        if(this.timezone){\n            const dtf = new Intl.DateTimeFormat('en-US', {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n                hourCycle: 'h23',\n                fractionalSecondDigits: 3,\n                timeZone: this.timezone\n            });\n            \n            return new Date(dtf.format(date));\n        }\n        \n        return date;\n    }\n}\n\nmodule.exports = TimeMatcher;","'use strict';\n\nconst EventEmitter = require('events');\nconst TimeMatcher = require('./time-matcher');\n\nclass Scheduler extends EventEmitter{\n    constructor(pattern, timezone, autorecover){\n        super();\n        this.timeMatcher = new TimeMatcher(pattern, timezone);\n        this.autorecover = autorecover;\n    }\n\n    start(){\n        // clear timeout if exists\n        this.stop();\n\n        let lastCheck = process.hrtime();\n        let lastExecution = this.timeMatcher.apply(new Date());\n\n        const matchTime = () => {\n            const delay = 1000;\n            const elapsedTime = process.hrtime(lastCheck);\n            const elapsedMs = (elapsedTime[0] * 1e9 + elapsedTime[1]) / 1e6;\n            const missedExecutions = Math.floor(elapsedMs / 1000);\n            \n            for(let i = missedExecutions; i >= 0; i--){\n                const date = new Date(new Date().getTime() - i * 1000);\n                let date_tmp = this.timeMatcher.apply(date);\n                if(lastExecution.getTime() < date_tmp.getTime() && (i === 0 || this.autorecover) && this.timeMatcher.match(date)){\n                    this.emit('scheduled-time-matched', date_tmp);\n                    date_tmp.setMilliseconds(0);\n                    lastExecution = date_tmp;\n                }\n            }\n            lastCheck = process.hrtime();\n            this.timeout = setTimeout(matchTime, delay);\n        };\n        matchTime();\n    }\n\n    stop(){\n        if(this.timeout){\n            clearTimeout(this.timeout);\n        }\n        this.timeout = null;\n    }\n}\n\nmodule.exports = Scheduler;\n","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst Task = require('./task');\nconst Scheduler = require('./scheduler');\nconst uuid = require('uuid');\n\nclass ScheduledTask extends EventEmitter {\n    constructor(cronExpression, func, options) {\n        super();\n        if(!options){\n            options = {\n                scheduled: true,\n                recoverMissedExecutions: false\n            };\n        }\n      \n        this.options = options;\n        this.options.name = this.options.name || uuid.v4();\n\n        this._task = new Task(func);\n        this._scheduler = new Scheduler(cronExpression, options.timezone, options.recoverMissedExecutions);\n\n        this._scheduler.on('scheduled-time-matched', (now) => {\n            this.now(now);\n        });\n\n        if(options.scheduled !== false){\n            this._scheduler.start();\n        }\n        \n        if(options.runOnInit === true){\n            this.now('init');\n        }\n    }\n    \n    now(now = 'manual') {\n        let result = this._task.execute(now);\n        this.emit('task-done', result);\n    }\n    \n    start() {\n        this._scheduler.start();  \n    }\n    \n    stop() {\n        this._scheduler.stop();\n    }\n}\n\nmodule.exports = ScheduledTask;\n","const EventEmitter = require('events');\nconst path = require('path');\nconst { fork } = require('child_process');\nconst uuid = require('uuid');\n\nconst daemonPath = `${__dirname}/daemon.js`;\n\nclass BackgroundScheduledTask extends EventEmitter {\n    constructor(cronExpression, taskPath, options){\n        super();\n        if(!options){\n            options = {\n                scheduled: true,\n                recoverMissedExecutions: false,\n            };\n        }\n        this.cronExpression = cronExpression;\n        this.taskPath = taskPath;\n        this.options = options;\n        this.options.name = this.options.name || uuid.v4();\n\n        if(options.scheduled){\n            this.start();\n        }\n    }\n\n    start() {\n        this.stop();\n        this.forkProcess = fork(daemonPath);\n\n        this.forkProcess.on('message', (message) => {\n            switch(message.type){\n            case 'task-done':\n                this.emit('task-done', message.result);\n                break;\n            }\n        });\n\n        let options = this.options;\n        options.scheduled = true;\n        \n        this.forkProcess.send({\n            type: 'register',\n            path: path.resolve(this.taskPath),\n            cron: this.cronExpression,\n            options: options\n        });\n    }\n    \n    stop(){\n        if(this.forkProcess){\n            this.forkProcess.kill();\n        }\n    }\n\n    pid() {\n        if(this.forkProcess){\n            return this.forkProcess.pid;\n        }\n    }\n\n    isRunning(){\n        return !this.forkProcess.killed;\n    }\n}\n\nmodule.exports = BackgroundScheduledTask;","module.exports = (() => {\n    if(!global.scheduledTasks){\n        global.scheduledTasks = new Map();\n    }\n    \n    return {\n        save: (task) => {\n            if(!task.options){\n                const uuid = require('uuid');\n                task.options = {};\n                task.options.name = uuid.v4();\n            }\n            global.scheduledTasks.set(task.options.name, task);\n        },\n        getTasks: () => {\n            return global.scheduledTasks;\n        }\n    };\n})();","'use strict';\n\nconst ScheduledTask = require('./scheduled-task');\nconst BackgroundScheduledTask = require('./background-scheduled-task');\nconst validation = require('./pattern-validation');\nconst storage = require('./storage');\n\n/**\n * @typedef {Object} CronScheduleOptions\n * @prop {boolean} [scheduled] if a scheduled task is ready and running to be\n *  performed when the time matches the cron expression.\n * @prop {string} [timezone] the timezone to execute the task in.\n */\n\n/**\n * Creates a new task to execute the given function when the cron\n *  expression ticks.\n *\n * @param {string} expression The cron expression.\n * @param {Function} func The task to be executed.\n * @param {CronScheduleOptions} [options] A set of options for the scheduled task.\n * @returns {ScheduledTask} The scheduled task.\n */\nfunction schedule(expression, func, options) {\n    const task = createTask(expression, func, options);\n\n    storage.save(task);\n\n    return task;\n}\n\nfunction createTask(expression, func, options) {\n    if (typeof func === 'string')\n        return new BackgroundScheduledTask(expression, func, options);\n\n    return new ScheduledTask(expression, func, options);\n}\n\n/**\n * Check if a cron expression is valid.\n *\n * @param {string} expression The cron expression.\n * @returns {boolean} Whether the expression is valid or not.\n */\nfunction validate(expression) {\n    try {\n        validation(expression);\n\n        return true;\n    } catch (_) {\n        return false;\n    }\n}\n\n/**\n * Gets the scheduled tasks.\n *\n * @returns {ScheduledTask[]} The scheduled tasks.\n */\nfunction getTasks() {\n    return storage.getTasks();\n}\n\nmodule.exports = { schedule, validate, getTasks };\n","\nimport CronError from \"./CronError\";\nimport CronJob from \"./CronJob\";\nimport validateInterval from \"./validateInterval\";\n\nexport default class CronSet<I extends string = string> extends Set<CronJob> {\n\tinterval: I;\n\n\tconstructor(interval: I) {\n\t\tsuper();\n\t\tthis.interval = validateInterval(interval);\n\t}\n\n\tadd(job: CronJob<I>): this;\n\tadd(...jobs: CronJob<I>[]): this;\n\tadd(...jobs: CronJob<I>[]) {\n\t\tif (jobs.length > 1) jobs.forEach(job => this.#add(job));\n\t\telse this.#add(jobs[0]!);\n\n\t\treturn this;\n\t}\n\n\tdelete(job: CronJob<I>): boolean;\n\tdelete(...jobs: CronJob<I>[]): boolean;\n\tdelete(...jobs: CronJob<I>[]) {\n\t\treturn jobs.length > 1\n\t\t\t? jobs.map(job => this.#delete(job)).every(Boolean)\n\t\t\t: this.#delete(jobs[0]!);\n\t}\n\n\t#add(job: CronJob<I>) {\n\t\tif (job.interval != this.interval)\n\t\t\tthrow new CronError(\"INVALID_CRON_SET_INTERVAL\", this.interval, job.interval);\n\n\t\tsuper.add(job);\n\n\t\treturn this;\n\t}\n\n\t#delete(job: CronJob<I>) {\n\t\tif (job.interval != this.interval)\n\t\t\tthrow new CronError(\"INVALID_CRON_SET_INTERVAL\", this.interval, job.interval);\n\n\t\treturn super.delete(job);\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.values() as IterableIterator<CronJob<I>>;\n\t}\n}","import CronJob from \"./CronJob\";\nimport CronSet from \"./CronSet\";\nimport validateInterval from \"./validateInterval\";\n\nexport default class CronJobMap<I extends string = string> extends Map<I, CronSet<I>> {\n\tget(interval: I) {\n\t\tif (!this.has(interval)) super.set(interval, new CronSet(interval));\n\n\t\treturn super.get(interval)! as CronSet<I>;\n\t}\n\n\tset(interval: I, value = new CronSet<I>(interval)) {\n\t\tsuper.set(validateInterval(interval), value);\n\n\t\treturn this;\n\t}\n\n\tadd(interval: I, ...jobs: CronJob<I>[]) {\n\t\tconst set = this.get(validateInterval(interval));\n\n\t\tjobs.forEach(job => set.add(job));\n\n\t\treturn this;\n\t}\n\n\tremove(interval: I, ...jobs: CronJob<I>[]) {\n\t\tconst set = this.get(validateInterval(interval));\n\n\t\tset.delete(...jobs);\n\n\t\treturn this;\n\t}\n\n\thas(interval: I) {\n\t\treturn super.has(validateInterval(interval));\n\t}\n}","import cron, { ScheduledTask } from \"node-cron\";\n\nimport CronJob from \"./CronJob\";\nimport CronJobMap from \"./CronJobMap\";\nimport CronError from \"./CronError\";\nimport CronSet from \"./CronSet\";\nimport validateInterval from \"./validateInterval\";\n\nexport type CronJobsObject =  {\n\t[K: string]: CronFunc | CronFunc []\n}\nexport type CronJobs<T extends CronJobsObject = {}> = {\n\t[K in Extract<keyof T, string>]: CronFunc | CronFunc []\n};\nexport type ConstructorReturnType<T extends abstract new (...args: any[]) => any> = T extends abstract new (...args: any[]) => infer R ? R : unknown;\n\nexport type CronFunc = (date?: Date) => void;\nexport default class CronJobManager<\n\tT extends CronJobs<T> = CronJobsObject,\n\tJ extends typeof CronJob[] = typeof CronJob[],\n\tI extends string = Extract<keyof T, string>,\n> {\n\t#jobs = new CronJobMap<I>();\n\t#runningJobs = new CronJobMap<I>();\n\t#stoppedJobs = new CronJobMap<I>();\n\n\tget jobs() {\n\t\treturn this.#jobs;\n\t}\n\n\tconstructor(\n\t\tjobs: T & ThisType<CronJobManager<T, J, I>> = {} as T,\n\t\t// @ts-ignore\n\t\tjobClasses: [...J] = [],\n\t) {\n\t\t// eslint-disable-next-line\n\t\t(Object.entries(jobs) as [[I, T[keyof T]]])\n\t\t\t.forEach(([interval, func]) => {\n\t\t\t\tvalidateInterval(interval);\n\t\t\t\tlet cronFunc: CronFunc | CronFunc[] = func;\n\n\t\t\t\tif (!Array.isArray(func)) cronFunc = [func];\n\n\t\t\t\t// eslint-disable-next-line\n\t\t\t(cronFunc as CronFunc[]).forEach(func => {\n\t\t\t\t\tthis.#jobs.add(interval, new CronJob<I>(interval, func).init(this));\n\t\t\t\t});\n\t\t\t});\n\n\t\tjobClasses.forEach(Job => {\n\t\t\tif (!(Job?.prototype instanceof CronJob)) throw new CronError(\"INVALID_CRON_JOB_CLASS\", Job);\n\t\t\tconst job = new Job<I>().init(this);\n\n\t\t\tthis.#jobs.add(job.interval, job);\n\t\t});\n\t}\n\n\tstart(interval: I) {\n\t\tif (this.#runningJobs.has(interval)) throw new CronError(\"INTERVAL_ALREADY_RUNNING\", interval)\n\n\t\tthis.#runningJobs.add(interval, ...[...this.#jobs.get(interval)]\n\t\t\t.map(job => (job.cronTask = cron.schedule(job.interval, job.caller), job)));\n\n\t\treturn this.#runningJobs.get(interval);\n\t}\n\n\tstartAll() {\n\t\tfor (const interval of this.#jobs.keys()) this.start(interval);\n\n\t\treturn this;\n\t}\n\n\tgetAllIntervals() { return [...this.#jobs.keys()]; }\n\n\tgetRunningJobs(interval: I) {\n\t\treturn [...this.#runningJobs.get(interval)];\n\t}\n\n\tgetRunningIntervals() { return [...this.#runningJobs.keys()]; }\n\n\tgetAllRunningJobs() {\n\t\treturn [...this.#runningJobs.values()].map(set => [...set]).flat(1);\n\t}\n\n\tgetStoppedJobs(interval: I) {\n\t\treturn this.#stoppedJobs.get(interval);\n\t}\n\n\tgetAllStoppedJobs() {\n\t\treturn [...this.#stoppedJobs.values()].flat(1) as CronSet<I>[];\n\t}\n\n\tgetStopIntervals() { return [...this.#stoppedJobs.keys()]; }\n\n\n\tstopAll() {\n\t\tthis.getRunningIntervals().forEach(interval => this.stop(interval));\n\n\t\treturn this;\n\t}\n\n\tstop(interval: I) {\n\t\tconst jobs = this.getRunningJobs(interval).map(job => (job.cronTask.stop(), job));\n\n\t\tthis.#stoppedJobs.add(interval, ...jobs);\n\n\t\treturn this.#stoppedJobs.get(interval);\n\t}\n\n\trestart(interval: I) {\n\t\tconst jobs = this.getStoppedJobs(interval);\n\n\t\t[...jobs].forEach(job => job.cronTask.start());\n\n\t\tthis.#stoppedJobs.get(interval).clear();\n\t\tthis.#runningJobs.get(interval).add(...jobs);\n\n\t\treturn jobs;\n\t}\n\n\trestartAll() {\n\t\tconst stopped = this.getAllStoppedJobs(),\n\t\t\tstoppedIntervals = [...this.#stoppedJobs.keys()];\n\n\t\tfor (const interval of stoppedIntervals) this.restart(interval);\n\n\t\treturn stopped;\n\t}\n}"],"names":["TypeError","Error","EventEmitter","Task","monthNamesConversion","weekDayNamesConversion","require$$0","require$$1","require$$2","require$$3","require$$4","convertExpression","validate","TimeMatcher","Scheduler","rng","bytesToUuid","v1","v4","uuid","ScheduledTask","BackgroundScheduledTask","storage","global","cron"],"mappings":"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"}